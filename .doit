#!/usr/bin/perl
# Copyright (c) 2000 SuSE GmbH Nuernberg, Germany.  All rights reserved.
#
# Author: Marcus Schaefer <ms@suse.de>, 2005
# Build script for nxshell with SVN access
#
# Syntax:
# -------
#   doit --prepare [ --tag <tag> ] [ --branch <branch> ]
#				   [ --sourcelevel <n> ]
#
# tag or branch specifiy the subversion location where a tag
# or a branch source is stored.
# ---
#
use strict;
use Getopt::Long;
use Env;

#=====================================
# Globals...
#-------------------------------------
my $Prepare;
my $Tag;
my $Branch;
my $SourceList;
my $LocalSource;
my $Clean;

#----[ main ]-----------------#
sub main {
#-----------------------------------------------
# main routine to prepare for all the
# package and version stuff
#
	my $result = GetOptions(
		"tag|t=s"         => \$Tag,  
		"branch|r=s"      => \$Branch,
		"prepare|p"       => \$Prepare,
		"sourcelevel=i"   => \$SourceList,
		"local|L"         => \$LocalSource,
		"clean|c"         => \$Clean,
		"help|h"          => \&usage,
		"<>"              => \&usage
	);
	if ( $result != 1 ) {
		usage();
	}
	#==============================================
	# Check user privileges...
	#----------------------------------------------
	if (! defined $Prepare) {
		usage();
	}
	#==============================================
	# Setup subversion path for checkout...
	#----------------------------------------------
	my $tagsID;
	my $treeID;
	if (defined $Branch) {
		$tagsID = $Branch;
		$treeID = "nxshell-branches";
	}
	if (defined $Tag) {
		$tagsID = $Tag;
		$treeID = "nxshell-tags";
	}
	#==============================================
	# Checkout source
	#----------------------------------------------
	my $pacdir = checkout (
		$tagsID,$treeID,$SourceList,$LocalSource
	);
	#==============================================
	# Add %changelog
	#----------------------------------------------
	my $bin = "/suse/ms/bin/convert_changes_to_rpm_changelog";
	if (open (FD,">>$pacdir/nxshell.spec")) {
		print FD "\n";
		print FD '%changelog -n nxshell';
		print FD "\n";
		if (open (LG,"$bin $pacdir/nxshell.changes|")) {
			while (<LG>) {
				print FD $_;
			}
		}
		close FD;
		close LG;
	}
	#==============================================
	# Cleanup
	#----------------------------------------------
	my $host = qx (hostname);
	chomp ($host);
	print 'Retrieve archive with: ';
	print '[ scp -r root@'.$host.':'.$pacdir." . ]\n";
}

#---[ checkout ]-----#
sub checkout {
#-------------------------------------------------
# checkout sources and create a package directory
# ready to go to /work/src/done
#
	my $pacdir = svnup (@_);
	chdir $pacdir;
	qx( mv nxshell/rpm/* . );
	chdir "./nxshell";
	qx (./.archive);
	chdir $pacdir;
	qx( mv nxshell/*.bz2 . );
	qx( rm -rf nxshell );
	return $pacdir;
}

#----[ svnup ]----------------#
sub svnup {
#-----------------------------------------------
# checkout nxshell source according to an optional
# tag and return the pathname of the temp directory
# where the new sources are located
#
	my $tagName = $_[0];
	my $treeID  = $_[1];
	my $slevel  = $_[2];
	my $local   = $_[3];

	#===========================================
	# set SVN path to repository and branch/tag
	#-------------------------------------------
	my $svnPath = "svn.berlios.de/svnroot/repos/nxshell/nxshell-head";
	if (defined $tagName) {
		$svnPath = "svn.berlios.de/svnroot/repos/nxshell/".$treeID."/".$tagName;
	}
	#===========================================
	# create tmp directory and change into it
	#-------------------------------------------
	my $parent = qx ( pwd );
	my $tmpdir = qx (
		mktemp -q -d /tmp/svnnxshell.XXXXXX
	);
	chomp $parent;
	chomp $tmpdir;
	chdir $tmpdir
		|| die "Could not create temp dir: $!";
	#===========================================
	# use local source if defined
	#-------------------------------------------
	if (defined $local) {
		print "Checkout source level [local]...\n";
		chdir $parent
			|| die "Could not change dir: $parent:$!";
		qx (mkdir -p $tmpdir/nxshell && cp -a . $tmpdir/nxshell);
		chdir $tmpdir
			|| die "Could not create temp dir: $!";
		return $tmpdir;
	}
	#===========================================
	# checkout source at given level or HEAD
	#-------------------------------------------
	if (defined $slevel) {
		print "Checkout source level [$slevel]...\n";
		qx (svn co -r $slevel http://$svnPath nxshell 2>&1 );
	} else {
		my $location = "HEAD";
		if ( defined $Branch ) {
			$location = "BRANCH: $Branch";
		}
		if ( defined $Tag ) {
			$location = "TAG: $Tag";
		}
		print "Checkout source level [$location]...\n";
		qx ( svn co http://$svnPath nxshell 2>&1 );
	}
	my $error = $? >> 8;
	if ($error > 0) {
		die "checkout failed: $!";
	}
	return $tmpdir;
}

#----[ usage ]------------#
sub usage {
#----------------------------------------
# give me a usage message
#	
	print "usage: doit [ options ]\n";
	print "options:\n";
	print "[ -p | --prepare [ --tag | --branch <name> ] ]\n";
	print "   prepare package for build. Use sources as specified\n";
	print "   by tag or branch. If no tag is given the head will\n";
	print "   be used\n";
	print "--\n";
	exit (0);
}

main();
